name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve

      - name: Set up kubectl
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG }}
          version: v1.21.0
          binaries-url: "https://dl.k8s.io/release/v1.21.0/bin/linux/amd64/kubectl"

      - name: update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name travelagency

      - name: Check cluster access
        run: kubectl get nodes

      - name: Create Kubernetes Secrets
        run: |
          kubectl create secret generic db-credentials \
            --from-literal=mysql-database=${{ secrets.MYSQL_DATABASE }} \
            --from-literal=mysql-user=${{ secrets.MYSQL_USER }} \
            --from-literal=mysql-password=${{ secrets.MYSQL_PASSWORD }} \
            --from-literal=mysql-root-password=${{ secrets.MYSQL_ROOT_PASSWORD }}
          kubectl create secret docker-registry ghcr-secret \
            --docker-server=ghcr.io \
            --docker-username=${{ secrets.GHCR_USERNAME }} \
            --docker-password=${{ secrets.GHCR_TOKEN }} \
            --docker-email=${{ secrets.GHCR_EMAIL }}

      - name: Deploy Kubernetes manifests
        run: |
          kubectl apply -f k8s/aws-test.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/mysql-pvc.yaml
          kubectl apply -f k8s/private-lb.yaml
          kubectl apply -f k8s/storageclass.yaml
          kubectl apply -f k8s/mysql-deployment.yaml
          kubectl apply -f k8s/tomcat-deployment.yaml
          kubectl apply -f k8s/mysql-service.yaml
          kubectl apply -f k8s/tomcat-service.yaml

  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Run tests
        run: echo "test success"
